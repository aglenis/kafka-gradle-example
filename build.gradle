/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'aglenis' at '12/19/16 5:24 PM' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
mainClassName = "KafkaSimpleProducer"

def javaVersion = '1.8'
def kafkaVersion = '0.10.0.0'
def kafkaScalaVersion = '2.11'
def scalaVersion = kafkaScalaVersion+'.8'
def confluentVersion = '3.1.1'
def scalatestVersion = '2.2.6'
def avroVersion = '1.7.7'
def jettyVersion = '9.2.12.v20150709'
def jerseyVersion = '2.19'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here
    maven {
        url  "http://packages.confluent.io/maven/"
    }

    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.14'
    //kafka, kafkaStreams and avro dependencies
    compile group: 'org.apache.kafka', name: 'kafka-clients' , version: kafkaVersion
    compile group: 'org.apache.kafka', name: 'kafka_'+kafkaScalaVersion , version: kafkaVersion
    compile group: 'com.101tec', name: 'zkclient' , version: '0.9'
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: confluentVersion
    compile group: 'io.confluent', name: 'kafka-schema-registry-client' , version: confluentVersion
    compile group: 'io.confluent', name: 'kafka-schema-registry' , version: confluentVersion
    compile group: 'com.esotericsoftware', name: 'kryo', version: '4.0.0'
    //not sure this specific dependency is necessary



    compile group: 'junit', name: 'junit' , version: '4.12'

    compile group: 'org.apache.curator', name: 'curator-test' , version: '2.9.0'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

task execute(type:JavaExec) {
    main = mainClass
    classpath = sourceSets.main.runtimeClasspath
}
